{"filename": "python-pytorch-opt-cuda-2.0.1-1-x86_64.pkg.tar.zst", "name": "python-pytorch-opt-cuda", "base": "python-pytorch", "version": "2.0.1-1", "desc": "Tensors and Dynamic neural networks in Python with strong GPU acceleration (with CUDA and AVX2 CPU optimizations)", "csize": "490701721", "isize": "1981897189", "md5sum": "b2c24b2257fbfda3d4b755e9974c9d11", "sha256sum": "48d91792c6a3eee238db3effb5fc3d7d83f98ae4fc20aa9eb60a67ed7ca7247c", "pgpsig": "iQIzBAABCAAdFiEEj8FaBklQqZ3RvRTdOeS4d+YuuRUFAmRcwM8ACgkQOeS4d+YuuRXx1BAAjzjvLs+ggN9DGlukzAUExva0PJpuZ0oyULILEqauyMxSjUGdd5FgbdPs7ctpIn6+u1sSV+UkHmwhPAiAf6kryMeZs2gghzmfttNg4bbcOLhtx4EXOviH62jRtnpRe4pP8sgNGoqwogG7mz86SmWjSP06B4n3Qb7XXAQpMTJdGVvcACY3Z6UhSY5pE2tyv66cS33x29/yDdYEanC+qZ3ezF91DlAn0OyfXfnyJW13n/CxONJWs9ORfkB1giU360kx00aBGLqH6CtXQiaCbQ1a/hxoU+gAvh77XSqcNSy9a4DPrEGRTrT19EKy11eO9KSq8odvW/0YxxKI3CsWfUM/hXTxyjZxKrw58mdPy7eBa1J/SBehtkIUywkk7B9w30Vm9YFqWX8YjwQYcRT8cXgsY5aXSPsIoOf01YnKys41Nwm3wgiu5NTUAq5DjrGgtQSuo5YlJx4mh/70cWrN1WZuNyr3k8r6SqD5fMZ5FLUv9xIlT5P0PRqDNeD1+qNR5DZeM9hSlee/rDyUzneOSxhTLlqMrTzwBuaM/UV76oZz9M89g1s3iFbwAS8WHuCXfD7ypv17AngzWfMWfvYoXRG1hmGJ2diUNSpN35nRPsbToBv4QOxVGo3rU2qSilox72siuVqrUNGHXML5JvfEyRB/jYw8+0vKbTHaYvwdU2VvKyQ=", "url": "https://pytorch.org", "license": "BSD", "arch": "x86_64", "builddate": "1683775428", "packager": "Sven-Hendrik Haase <svenstaro@archlinux.org>", "conflicts": "python-pytorch", "provides": ["python-pytorch", "python-pytorch-cuda"], "depends": ["google-glog", "gflags", "opencv", "openmp", "nccl", "pybind11", "python", "python-yaml", "libuv", "python-numpy", "python-sympy", "protobuf", "ffmpeg4.4", "python-future", "qt6-base", "intel-oneapi-mkl", "python-typing_extensions", "numactl", "cuda", "cudnn", "magma-cuda", "onednn"], "makedepends": ["python", "python-setuptools", "python-yaml", "python-numpy", "cmake", "cuda", "cudnn", "git", "rocm-hip-sdk", "roctracer", "miopen", "ninja", "pkgconfig", "doxygen", "vulkan-headers", "shaderc"], "tokens": ["python-pytorch-opt-cuda", "python-pytorch-opt-cuda_x86_64", "python-pytorch-opt-cuda_testing", "python-pytorch-opt-cuda_x86_64_testing"]}